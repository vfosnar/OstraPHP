#!/bin/php
<?php

require_once "nastroje.php" ;
require_once "transpilator.php" ;
require_once "zvladac_oznameni.php" ;

$kratke_moznosti = "" ;
$kratke_moznosti .= "z::" ;
$kratke_moznosti .= "v::" ;
$kratke_moznosti .= "h" ;
$kratke_moznosti .= "s" ;
$kratke_moznosti .= "m" ;

$dlouhe_moznosti = array(
    "help"
) ;

$konfigurace = getopt($kratke_moznosti, $dlouhe_moznosti) ;

if (array_key_exists("h", $konfigurace) || array_key_exists("help", $konfigurace)) {
    echo <<<EOT
použití: ophp [možnosti]

Bo neni cas pyco

možnosti:
    -h, --help      Zobrazí tuto nápovědu
    -z              Určí zdrojovou složku s .ophp soubory
    -v              Určí výslednou složku s vygenerovanými .php soubory
    -s              Striktní režim, ukončí kompilaci jakmile narazí na chybu
    -m              Monitorování složky, sleduje a transpiluje při změně .ophp souborů

EOT ;
    return ;
}

echo "spouštění transpilátoru\n" ;

$zdrojova_slozka = "" ;
if (array_key_exists("z", $konfigurace))
    $zdrojova_slozka = $konfigurace["z"] ;
$zdrojova_slozka = normalizovat_cestu($zdrojova_slozka) ;
echo "zdrojová složka: $zdrojova_slozka\n" ;

$vystupni_slozka = "" ;
if (array_key_exists("v", $konfigurace))
    $vystupni_slozka = $konfigurace["v"] ;
$vystupni_slozka = normalizovat_cestu($vystupni_slozka) ;
echo "výstupní složka: $vystupni_slozka\n" ;

function formatovat_bul(bool $bul) {
    return $bul ? "fajne" : "nyt" ;
}

$striktni = array_key_exists("s", $konfigurace) ;
$striktni_text = formatovat_bul($striktni) ;
echo "striktní: $striktni_text\n" ;

$monitorovani = array_key_exists("m", $konfigurace) ;
$monitorovani_text = formatovat_bul($monitorovani) ;
echo "monitorování: $monitorovani_text\n" ;

echo "\n" ;

function vylistovat_ophp_soubory(string $slozka): array {
    $soubory = projit_slozku($slozka) ;
    $ophp_soubory = array_filter($soubory, function($ophp_soubor) { return str_ends_with($ophp_soubor, ".ophp") ; }) ;
    sort($ophp_soubory) ;
    return $ophp_soubory ;
}

function kompilovat(string $zdrojova_slozka, string $vystupni_slozka, array $ophp_soubory, bool $striktni): void {
    echo "transpilování...\n" ;

    foreach ($ophp_soubory as $ophp_soubor) {
        $ophp_soubor_bez_slozky = mb_substr($ophp_soubor, mb_strlen($zdrojova_slozka)) ;
        $php_soubor_bez_slozky = nahradit_koncovku($ophp_soubor_bez_slozky, ".ophp", ".php") ;
        $php_soubor = $vystupni_slozka . $php_soubor_bez_slozky ;
        
        $prefix = "[$ophp_soubor_bez_slozky] " ;
    
        $ophp_kod = file_get_contents($ophp_soubor) ;
        $transpilator = new Transpilator($ophp_kod) ;
        $php_kod = $transpilator->transpilovat(new ZvladacOznameni($striktni, $prefix)) ;
    
        $slozka = dirname($php_soubor) ;
        if (!file_exists($slozka))
            mkdir($slozka, 0777, true) ;
        
        file_put_contents($php_soubor, $php_kod) ;
    }

    echo "\n" ;
    echo "dokončeno\n" ;
}

if ($monitorovani) {
    $hash = "" ;

    while (true) {
        $ophp_soubory = vylistovat_ophp_soubory($zdrojova_slozka) ;

        $novy_hash = md5_pole_souboru($ophp_soubory) ;
        if ($hash !== $novy_hash) {
            kompilovat($zdrojova_slozka, $vystupni_slozka, $ophp_soubory, $striktni) ;
            $hash = $novy_hash ;
        }

        sleep(1) ;
    }
} else {
    $ophp_soubory = vylistovat_ophp_soubory($zdrojova_slozka) ;
    kompilovat($zdrojova_slozka, $vystupni_slozka, $ophp_soubory, $striktni) ;
}
