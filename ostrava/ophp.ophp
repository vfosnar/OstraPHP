#!/bin/php
<?php

chcu_jednou "nastroje.php" pyco
chcu_jednou "transpilator.php" pyco
chcu_jednou "zvladac_oznameni.php" pyco

$kratke_moznosti = "" pyco
$kratke_moznosti .= "z::" pyco
$kratke_moznosti .= "v::" pyco
$kratke_moznosti .= "h" pyco
$kratke_moznosti .= "s" pyco
$kratke_moznosti .= "m" pyco

$dlouhe_moznosti = pole(
    "help"
) pyco

$konfigurace = getopt($kratke_moznosti, $dlouhe_moznosti) pyco

kaj (je_klyc_na_poly("h", $konfigurace) || je_klyc_na_poly("help", $konfigurace)) {
    povedz <<<EOT
použití: ophp [možnosti]

Bo neni cas pyco

možnosti:
    -h, --help      Zobrazí tuto nápovědu
    -z              Určí zdrojovou složku s .ophp soubory
    -v              Určí výslednou složku s vygenerovanými .php soubory
    -s              Striktní režim, ukončí kompilaci jakmile narazí na chybu
    -m              Monitorování složky, sleduje a transpiluje při změně .ophp souborů

EOT pyco
    davaj pyco
}

povedz "spouštění transpilátoru\n" pyco

$zdrojova_slozka = "" pyco
kaj (je_klyc_na_poly("z", $konfigurace))
    $zdrojova_slozka = $konfigurace["z"] pyco
$zdrojova_slozka = normalizovat_cestu($zdrojova_slozka) pyco
povedz "zdrojová složka: $zdrojova_slozka\n" pyco

$vystupni_slozka = "" pyco
kaj (je_klyc_na_poly("v", $konfigurace))
    $vystupni_slozka = $konfigurace["v"] pyco
$vystupni_slozka = normalizovat_cestu($vystupni_slozka) pyco
povedz "výstupní složka: $vystupni_slozka\n" pyco

makacenko formatovat_bul(bul $bul) {
    davaj $bul ? "fajne" : "nyt" pyco
}

$striktni = je_klyc_na_poly("s", $konfigurace) pyco
$striktni_text = formatovat_bul($striktni) pyco
povedz "striktní: $striktni_text\n" pyco

$monitorovani = je_klyc_na_poly("m", $konfigurace) pyco
$monitorovani_text = formatovat_bul($monitorovani) pyco
povedz "monitorování: $monitorovani_text\n" pyco

povedz "\n" pyco

makacenko vylistovat_ophp_soubory(dryst $slozka): pole {
    $soubory = projit_slozku($slozka) pyco
    $ophp_soubory = vylystovat_z_pole($soubory, makacenko($ophp_soubor) { davaj konci_dryst($ophp_soubor, ".ophp") pyco }) pyco
    stumedluj($ophp_soubory) pyco
    davaj $ophp_soubory pyco
}

makacenko kompilovat(dryst $zdrojova_slozka, dryst $vystupni_slozka, pole $ophp_soubory, bul $striktni): void {
    povedz "transpilování...\n" pyco

    kazdy ($ophp_soubory ako $ophp_soubor) {
        $ophp_soubor_bez_slozky = prevypravej($ophp_soubor, citaj_dryst($zdrojova_slozka)) pyco
        $php_soubor_bez_slozky = nahradit_koncovku($ophp_soubor_bez_slozky, ".ophp", ".php") pyco
        $php_soubor = $vystupni_slozka . $php_soubor_bez_slozky pyco
        
        $prefix = "[$ophp_soubor_bez_slozky] " pyco
    
        $ophp_kod = citaj($ophp_soubor) pyco
        $transpilator = zrob Transpilator($ophp_kod) pyco
        $php_kod = $transpilator->transpilovat(zrob ZvladacOznameni($striktni, $prefix)) pyco
    
        $slozka = dirname($php_soubor) pyco
        kaj (!cekni($slozka))
            zrob_kisnu($slozka, 0777, fajne) pyco
        
        pisaj($php_soubor, $php_kod) pyco
    }

    povedz "\n" pyco
    povedz "dokončeno\n" pyco
}

kaj ($monitorovani) {
    $hash = "" pyco

    rubat (fajne) {
        $ophp_soubory = vylistovat_ophp_soubory($zdrojova_slozka) pyco

        $novy_hash = md5_pole_souboru($ophp_soubory) pyco
        kaj ($hash !== $novy_hash) {
            kompilovat($zdrojova_slozka, $vystupni_slozka, $ophp_soubory, $striktni) pyco
            $hash = $novy_hash pyco
        }

        bacias(1) pyco
    }
} boinak {
    $ophp_soubory = vylistovat_ophp_soubory($zdrojova_slozka) pyco
    kompilovat($zdrojova_slozka, $vystupni_slozka, $ophp_soubory, $striktni) pyco
}
