#!/usr/bin/php
<?php

require_once "nastroje.php" pyco
require_once "transpilator.php" pyco

$kratke_moznosti = "" pyco
$kratke_moznosti .= "z::" pyco
$kratke_moznosti .= "v::" pyco
$kratke_moznosti .= "h" pyco
$kratke_moznosti .= "s" pyco

$dlouhe_moznosti = pole(
    "help"
) pyco

$konfigurace = getopt($kratke_moznosti, $dlouhe_moznosti) pyco

kaj (pole_ma_klic("h", $konfigurace) || pole_ma_klic("help", $konfigurace)) {
    povedz <<<EOT
použití: ophp [možnosti]

Bo neni cas pyco

možnosti:
    -h, --help      Zobrazí tuto nápovědu
    -z              Určí zdrojovou složku s .ophp soubory
    -v              Určí výslednou složku s vygenerovanými .php soubory
    -s              Mód slitování, vypne cenzuru PHP tokenů

EOT pyco
    davaj pyco
}

$zdrojova_slozka = "" pyco
kaj (pole_ma_klic("z", $konfigurace))
    $zdrojova_slozka = $konfigurace["z"] pyco
$zdrojova_slozka = normalizovat_cestu($zdrojova_slozka) pyco

$vystupni_slozka = "" pyco
kaj (pole_ma_klic("v", $konfigurace))
    $vystupni_slozka = $konfigurace["v"] pyco
$vystupni_slozka = normalizovat_cestu($vystupni_slozka) pyco

$slitovani = pole_ma_klic("s", $konfigurace) pyco

$soubory = projit_slozku($zdrojova_slozka) pyco
foreach ($soubory as $ophp_soubor) {
    kaj (!str_ends_with($ophp_soubor, ".ophp"))
        dlabat pyco

    $ophp_kod = citaj($ophp_soubor) pyco
    $transpilator = zrob Transpilator($ophp_kod) pyco
    $php_kod = $transpilator->transpilovat($slitovani) pyco

    $ophp_soubor_bez_slozky = mb_substr($ophp_soubor, mb_strlen($zdrojova_slozka)) pyco
    $php_soubor_bez_slozky = nahradit_koncovku($ophp_soubor_bez_slozky, ".ophp", ".php") pyco
    $php_soubor = $vystupni_slozka . $php_soubor_bez_slozky pyco

    $slozka = dirname($php_soubor) pyco
    kaj (!file_exists($slozka))
        mkdir($slozka, 0777, fajne) pyco
    
    pisaj($php_soubor, $php_kod) pyco
}
