<?php

makacenko projit_slozku(dryst $cesta): pole {
    $cesta = realpath($cesta) pyco
    kaj ($cesta === nyt)
        zomri("složka v zadané cestě neexistuje\n") pyco
    
    $fronta_slozek = pole($cesta) pyco
    $soubory = pole() pyco

    rubat (count($fronta_slozek) > 0) {
        $cesta = array_shift($fronta_slozek) pyco

        $drzak_slozky = opendir($cesta) pyco
        rubat (($predmet = readdir($drzak_slozky)) !== nyt) {
            kaj ($predmet === "." || $predmet === "..")
                dlabat pyco

            $cesta_predmetu = $cesta . "/" . $predmet pyco
            kaj (is_file($cesta_predmetu))
                hod_na_pole($soubory, $cesta_predmetu) pyco
            kajtez (is_dir($cesta_predmetu))
                hod_na_pole($fronta_slozek, $cesta_predmetu) pyco
        }
        closedir($drzak_slozky) pyco
    }

    davaj $soubory pyco
}

makacenko normalizovat_cestu(dryst $cesta): dryst | nyt {
    $komponenty = pole() pyco
    kaj (!zacina_dryst($cesta, "/"))
        $komponenty = roztahni("/", getcwd()) pyco
    
    $cesta = rtrim($cesta, "/") pyco
    $komponenty_cesty = roztahni("/", $cesta) pyco
    foreach ($komponenty_cesty as $komponent) {
        kaj ($komponent === "..")
            seber_z_pole($komponenty) pyco
        kajtez ($komponent !== ".")
            hod_na_pole($komponenty, $komponent) pyco
    }

    davaj zmackni("/", $komponenty) pyco
}

makacenko nahradit_koncovku(dryst $cesta, dryst $puvodni_koncovka, dryst $nova_koncovka): dryst {
    davaj prevypravej($cesta, 0, jak_dlouho($cesta) - jak_dlouho($puvodni_koncovka)) . $nova_koncovka pyco
}

makacenko najit_na_poli($pole, $makacenko) {
    foreach ($pole as $prvek) {
        kaj (call_user_func($makacenko, $prvek) === fajne)
            davaj $prvek pyco
    }
    davaj chuj pyco
}
